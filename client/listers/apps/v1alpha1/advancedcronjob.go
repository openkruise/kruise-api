/*
Copyright 2020 The Kruise Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/openkruise/kruise-api/apps/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AdvancedCronJobLister helps list AdvancedCronJobs.
type AdvancedCronJobLister interface {
	// List lists all AdvancedCronJobs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.AdvancedCronJob, err error)
	// AdvancedCronJobs returns an object that can list and get AdvancedCronJobs.
	AdvancedCronJobs(namespace string) AdvancedCronJobNamespaceLister
	AdvancedCronJobListerExpansion
}

// advancedCronJobLister implements the AdvancedCronJobLister interface.
type advancedCronJobLister struct {
	indexer cache.Indexer
}

// NewAdvancedCronJobLister returns a new AdvancedCronJobLister.
func NewAdvancedCronJobLister(indexer cache.Indexer) AdvancedCronJobLister {
	return &advancedCronJobLister{indexer: indexer}
}

// List lists all AdvancedCronJobs in the indexer.
func (s *advancedCronJobLister) List(selector labels.Selector) (ret []*v1alpha1.AdvancedCronJob, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AdvancedCronJob))
	})
	return ret, err
}

// AdvancedCronJobs returns an object that can list and get AdvancedCronJobs.
func (s *advancedCronJobLister) AdvancedCronJobs(namespace string) AdvancedCronJobNamespaceLister {
	return advancedCronJobNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AdvancedCronJobNamespaceLister helps list and get AdvancedCronJobs.
type AdvancedCronJobNamespaceLister interface {
	// List lists all AdvancedCronJobs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.AdvancedCronJob, err error)
	// Get retrieves the AdvancedCronJob from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.AdvancedCronJob, error)
	AdvancedCronJobNamespaceListerExpansion
}

// advancedCronJobNamespaceLister implements the AdvancedCronJobNamespaceLister
// interface.
type advancedCronJobNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AdvancedCronJobs in the indexer for a given namespace.
func (s advancedCronJobNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AdvancedCronJob, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AdvancedCronJob))
	})
	return ret, err
}

// Get retrieves the AdvancedCronJob from the indexer for a given namespace and name.
func (s advancedCronJobNamespaceLister) Get(name string) (*v1alpha1.AdvancedCronJob, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("advancedcronjob"), name)
	}
	return obj.(*v1alpha1.AdvancedCronJob), nil
}
